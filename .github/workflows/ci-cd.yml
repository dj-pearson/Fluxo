name: Fluxo Plugin CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish plugin after validation'
        required: false
        default: false
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
    
    - name: Build Fluxo CLI
      run: cargo build --release
    
    - name: Install Rojo
      run: |
        wget -O rojo.zip https://github.com/rojo-rbx/rojo/releases/latest/download/rojo-linux.zip
        unzip rojo.zip
        chmod +x rojo
        sudo mv rojo /usr/local/bin/
    
    - name: Validate Studio Plugin
      run: |
        cd studio-plugin
        rojo build --output ../target/FluxoPlugin.rbxmx
    
    - name: Upload CLI Artifact
      uses: actions/upload-artifact@v3
      with:
        name: fluxo-cli
        path: target/release/fluxo
    
    - name: Upload Plugin Artifact
      uses: actions/upload-artifact@v3
      with:
        name: fluxo-plugin
        path: target/FluxoPlugin.rbxmx

  test-plugin-project:
    runs-on: ubuntu-latest
    needs: validate
    steps:
    - uses: actions/checkout@v4
    
    - name: Download CLI
      uses: actions/download-artifact@v3
      with:
        name: fluxo-cli
        path: ./bin
    
    - name: Make CLI executable
      run: chmod +x ./bin/fluxo
    
    - name: Test plugin template creation
      run: |
        ./bin/fluxo init test-plugin --template plugin
        cd test-plugin
        ls -la
        cat fluxo.config.json
        cat plugin.meta.json
    
    - name: Validate test plugin
      run: |
        cd test-plugin
        ../bin/fluxo validate

  publish-staging:
    runs-on: ubuntu-latest
    needs: [validate, test-plugin-project]
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    
    - name: Create staging release
      run: |
        echo "Creating staging release..."
        # TODO: Upload to staging environment
        echo "Artifacts ready for staging deployment"

  publish-production:
    runs-on: ubuntu-latest
    needs: [validate, test-plugin-project]
    if: github.ref == 'refs/heads/main' && github.event.inputs.publish == 'true'
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Fluxo Release v${{ github.run_number }}
        body: |
          Automated release of Fluxo CLI and Studio Plugin
          
          ## Changes
          - See commit history for detailed changes
          
          ## Installation
          1. Download the CLI binary for your platform
          2. Install the Studio plugin (.rbxmx file)
          3. Follow the setup guide in the documentation
        draft: false
        prerelease: false
    
    - name: Upload CLI to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fluxo-cli/fluxo
        asset_name: fluxo-linux
        asset_content_type: application/octet-stream
    
    - name: Upload Plugin to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fluxo-plugin/FluxoPlugin.rbxmx
        asset_name: FluxoPlugin.rbxmx
        asset_content_type: application/octet-stream
