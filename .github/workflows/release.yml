name: Release

on:
  push:
    tags: ["v*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract release notes
        id: extract-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Create release body
          echo "## What's Changed" > release_notes.md
          echo "" >> release_notes.md
          echo "See [CHANGELOG.md](CHANGELOG.md) for full details." >> release_notes.md

      - name: Create release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Fluxo ${{ steps.extract-notes.outputs.version }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(github.ref, 'pre') || contains(github.ref, 'rc') }}

  build:
    name: Build (${{ matrix.name }})
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            
          - name: windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            
          - name: macos-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            
          - name: macos-aarch64
            os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          mkdir dist
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/fluxo.exe dist/
            cd dist
            7z a ../fluxo-${{ matrix.name }}.zip fluxo.exe
          else
            cp target/${{ matrix.target }}/release/fluxo dist/
            cd dist
            tar czvf ../fluxo-${{ matrix.name }}.tar.gz fluxo
          fi

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          files: fluxo-${{ matrix.name }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}
